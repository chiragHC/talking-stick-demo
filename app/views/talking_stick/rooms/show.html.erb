<div>
  <% content_for(:title) { "#{@room.name} Group Conversation" } %>
  <div class="container-fluid" role="main" id="room" data-room-name="<%= @room.name %>">
    <div class="row">
      <div class="col-xs-3 pull-right">
        <div class="row">
          <div class="col-xs-12">
            <div id="localvideo-container"></div>
          </div>
          <div class="col-xs-12">
            <span class="navbar-brand"><%= @room.name %></span>
          </div>
        </div>
      </div>
      <div class="col-xs-9">
        <div id="partnervideos" class="row">
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" role="dialog" id="video-preview">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h3 class="modal-title"><%= t(:joining_room) %> "<%= @room.name %>"</h3>
        </div>
        <div class="modal-body">
          <video id="localvideo" poster="<%= image_path 'talking_stick/loading.gif' %>" autoplay=true></video>
          <p id="preview_instructions"><%= t(:video_grant_access) %></p>
        </div>
        <div class="modal-footer">
          <button id="connect" type="button" class="btn btn-default btn-primary" data-dismiss="modal">Join</button>
          <button href="javascript:history(-1);" type="button" class="btn">Exit</button>
        </div>
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->
</div>
<script type="text/javascript">
$(document).ready(function() {
  // Attempt to keep the modal from scrolling vertically
  // 300px is the approximate height of the modal, minus the video
  $('#video-preview').find('video').height($(window).height() - 300);
  $('#video-preview').modal({backdrop: 'static', keyboard: false, show: true});
  var myGuid = TalkingStick.generateGUID();
  // Use the least-common-denominator, Rails API, for WebRTC setup
  var options = {
    url: '<%= room_path %>',
    myGuid: myGuid,
  };
  var signalingEngine = new TalkingStick.RailsSignaling(options);

  var options = {
    guid: myGuid,
    roomUrl: '<%= room_path %>',
    signalingEngine: signalingEngine,
    logLevel: 'trace',
    iceServers: [
      {url: 'stun:buckhead.alkaloid.net:3478', username: 'admin', credential: 'SomeBigSecaret'},
      {url: 'turn:buckhead.alkaloid.net:3478', username: 'admin', credential: 'SomeBigSecaret'},
    ],
  };
  TalkingStick.init(options);

  $('#connect').click(startSession);
  $('#localvideo').on('talking_stick.local_media_setup', function() {
    $('#preview_instructions').html('<%= t(:video_intro) %>');
  });
});

function startSession() {
  $('#localvideo').detach().appendTo('#localvideo-container');
  $('#localvideo').height('auto');
  // Gotta restart and re-mute the video after moving it
  $('#localvideo')[0].play();
  TalkingStick.connect();
};

function resizeVideos() {
  var videoCollection = $('#partnervideos .video');
  var numVideos = videoCollection.length;
  //var square = Math.sqrt(numVideos);
  //if (!isInt(square)) {
  //  // Round up to the next square
  //  square = parseInt(square) + 1;
  //}
  //videoCollection.css('width', (100/square) + "%");

  var videoCountClass;
  console.log("Number of videos", numVideos);
  switch(numVideos) {
  case 1:
    videoCountClass = 'one-friends-video-container';
    break;
  case 2:
    videoCountClass = 'two-friends-video-container';
    break;
  case 3:
  case 4:
    videoCountClass = 'four-friends-video-container';
    break;
  }

  videoCollection.removeClass('one-friends-video-container');
  videoCollection.removeClass('two-friends-video-container');
  videoCollection.removeClass('four-friends-video-container');
  videoCollection.addClass(videoCountClass);
};

function cleanupPartner() {
  resizeVideos();
}

function isInt(value){
  if((parseFloat(value) == parseInt(value)) && !isNaN(value)){
    return true;
  } else {
    return false;
  }
}

$('#localvideo').on('talking_stick.new_partner', function(ev, partner) {
  var container = $(document.createElement('div'));
  container.addClass('video col-xs-12 col-sm-6 col-md-6');
  var status = $(document.createElement('p'));
  status.html(partner.name);
  container.attr('data-partner-guid', partner.guid);
  container.append(partner.videoElement);
  container.append(status);

  resizeVideos();

  partner.videoElement.on('talking_stick.partner.ice_connection_state_change', function() {
    status.html(partner.peerConnection.iceConnectionState);
  });

  partner.videoElement.on('talking_stick.partner.cleanup', function() {
    container.remove();
  });

  $('#partnervideos').append(container);
});
$('#partnervideos').on('talking_stick.partner.media', resizeVideos);
$('#partnervideos').on('talking_stick.partner.cleanup', cleanupPartner);
$('#localvideo').on('talking_stick.connected', function() { $('#nav-microphone, #nav-video, #nav-exit').show() })
$(window).resize(resizeVideos);

</script>

